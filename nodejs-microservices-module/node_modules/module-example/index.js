'use strict';

/**
 * Include require server 
 */
var http = require('http');

/**
 * Client API define
 */
(function (e)
{

    /**
     *  Internal module define 
     */
    var _internal = function (options)
    {
        this.settings = options;
        return this;
    };

    /* Module prototype */
    _internal.prototype = {

        /* Module name */
        name: 'module-example',

        /* Module version */
        version: '0.0.1',

        /**
         *  Get module name
         *  @return string
         */
        getName: function ()
        {
            return this.name;
        },

        /**
         * Get module version
         * @return string
         */
        getVersion: function ()
        {
            return this.version;
        }
    };

    /**
     * External API server
     */
    var _server = function ()
    {
        return this;
    }

    /**
     * External API server prototype
     */
    _server.prototype = {
        start: function ()
        {
            var internalApi = new _internal();
            console.log('API server online, port 8080');
            http.createServer(function (request, response)
            {
                var data = {};
                response.writeHead(200, { 'Content-Type': 'application/json' });
                switch (request.url)
                {
                    case '/getName':
                        data.name = internalApi.getName();
                        break;
                    case '/getVersion':
                        data.version = internalApi.getVersion();
                        break;
                    default:
                        data.error = true;
                        break;
                }
                response.write(JSON.stringify(data));
                response.end();
            }).listen(8080);
        }
    };

    /**
     * Internal API client
     */
    var _client = function ()
    {
        return this;
    }

    /**
     * Internal API client prototype
     */
    _client.prototype = {
        /*
        * Call API
        */
        _call: function (apiName, callBack)
        {
            http.get(
                {
                    host: 'localhost',
                    path: '/' + apiName,
                    port: 8080
                }, function (response)
                {
                    var buffer = '';
                    response.on('data', function (data)
                    {
                        buffer += data;
                    });
                    response.on('end', function ()
                    {
                        callBack(JSON.parse(buffer));
                    });
                });
        },
        /**
         * Get version wrapper
         */
        getVersion: function (callBack)
        {
            this._call('getVersion', callBack);
        },
        /**
         * Get name wrapper
         */
        getName: function (callBack)
        {
            this._call('getName', callBack);
        }
    };

    /**
     * Export global
     */
    e.internal = _internal;
    e.server = _server;
    e.client = _client;

})(exports);